#include<stdio.h>
 #include<stdlib.h>
 #include<math.h>
 typedef struct node
 {
  int expo,coef;
 struct node *next;
 }node;
 node *tail;
 node * insert(node *,int,int);
 node * create();
 node * add(node *p1,node *p2);
 int eval(node *p1);
 void display(node *head);
 node *insert(node*head,int expo1,int coef1)
  {
   node *p,*q,*d;
   p=(node *)malloc(sizeof(node));
   p->expo=expo1;
   p->coef=coef1;
   p->next=NULL;
   if(head==NULL)
    {
      head=p;
      head->next=head;
      tail=head;
      return(head);
    }
 else 
{
 q=head;
 while(q->expo!=expo1&&q->next!=head)
 q=q->next;
 }
 if(expo1==q->expo)
  {
   q->coef=q->coef+coef1;
    return(head);
 }
 if(expo1>head->expo)
   {
 p->next=head;
 tail->next=p;
  head=p;
 return(head);
    }
    q=head;
   while(q->next!=head&&expo1<q->expo)
 {
 d=q;
 q=q->next;
 }
 if(q->expo<expo1)
 {
 p->next=q;
 d->next=p;
 }
        else
         {
                p->next=head;
                tail->next=p;
    tail=p;
 }
 return(head);
    }
 node *create()
 {
  int n,i,expo1,coef1;
  node *head=NULL;
  printf("\n\nEnter no of terms of polynomial==>");
  scanf("%d",&n);
  for(i=0;i<n;i++)
   {
     printf("\n\nEnter coef & expo==>");
     scanf("%d%d",&coef1,&expo1);
     head=insert(head,expo1,coef1);
   }
  return(head);
 }
 node *add(node *p1,node *p2)
 {
 node *p;
  node *head=NULL;
  printf("\n\n\nAddition of polynomial==>");
  p=p1->next;
  do
   {
     head=insert(head,p->expo,p->coef);
     p=p->next;
   }while(p!=p1->next);
    p=p2->next;
  do
   {
     head=insert(head,p->expo,p->coef);
     p=p->next;
   }while(p!=p2->next);
    return(head);
  }
 int eval(node *head)
 {
  node *p;
  int x,ans=0;
  printf("\n\nEnter the value of x=");
  scanf("%d",&x);
  p=head->next;
  do
   {
     ans=ans+p->coef*pow(x,p->expo);
     p=p->next;
   }while(p!=head->next);
    return(ans);
 }
 void display(node *head)
 {
  node *p,*q;
  int n=0;
  q=head;
  p=head;
  do
  {
   n++;
   q=q->next;
  }while(q!=head);
  printf("\n\n\tThe polynomial is==>");
  do
   {
    if(n-1)
     {
      printf("%dx^(%d) + ",p->coef,p->expo);
      p=p->next;
     }
 else
    {
     printf(" %dx^(%d)",p->coef,p->expo);
     p=p->next;
    }
    n--;
   } while(p!=head);
 }
 void main()
 {
  char ans;
  int a,x,ch;
  node *p1,*p2,*p3;
  p1=p2=p3=NULL;
  do
  {
   printf("\n----------------<<  MENU  >>---------------");
   printf("\n\tPolynomial Operations :");
   printf(" 1.Add");
   printf("\n2.Evaluate");
   printf("\n3.Exit");
   printf("\n---------------------------------------------------");
   printf("\nEnter your choice==>");
   scanf("%d",&ch);
   switch(ch)
    {
     case 1 :
                      p1=create();
                      display(p1);
                      p2=create();
                      display(p2);
                      p3=add(p1,p2);
                      display(p3);
                       break;
     case 2 :
                     p1=create();
                     display(p1);
                     a=eval(p1);
                     printf("\nValue of polynomial=%d",a);
                     break;
     case 3 :
                     exit(0);
                     break;
    default :
                     printf("\n invalid choice");
                     break;
   }
   printf("\nDo you want to continue(Y/N)?==>");
 scanf("\n%c",&ans);
    }while(ans=='Y'||ans=='y');
}
